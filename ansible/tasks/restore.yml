---
- name: 'RESTORE : decrypt dumps'
  ansible.builtin.command:
    cmd: '{{ item }}'
    chdir: files/backup/
  loop:
    - gpg --batch --passphrase '{{ BACKUP_PW }}' -o /tmp/db.tar -d db.gpg
    - gpg --batch --passphrase '{{ BACKUP_PW }}' -o /tmp/images.tar -d images.gpg

- name: 'RESTORE : remove current & add emtpy database'
  community.postgresql.postgresql_db:
    state: '{{ item.state }}'
    login_host: localhost
    login_user: test_user
    name: test_db
  loop:
    - { state: absent }
    - { state: present }

- name: 'RESTORE : restore database'
  community.postgresql.postgresql_db:
    state: restore
    login_host: localhost
    login_user: test_user
    name: test_db
    target: /tmp/db.tar

- name: 'RESTORE : restore images'
  ansible.builtin.unarchive:
    src: /tmp/images.tar
    dest: /var/lib/docker/volumes/volume_koillection/_data/
  become: true

- name: 'RESTORE : remove intermediate files'
  ansible.builtin.file:
    path: '{{ item }}'
    state: absent
  loop:
    - /tmp/db.tar
    - /tmp/images.tar
